{"version":3,"sources":["components/Header.js","components/Footer.js","components/Home.js","components/Layout.js","components/BasicCourse.js","components/FunFacts.js","components/Error.js","components/Nav.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","React","Component","Footer","Home","BasicCourse","FunFacts","Error","Nav","class","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","NavLink","to","App","BrowserRouter","Nav_Nav","Switch","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gTAEqBA,0LAEjB,OACEC,EAAAC,EAAAC,cAAA,6BAH8BC,IAAMC,YCArBC,mLAEjB,OACEL,EAAAC,EAAAC,cAAA,oCAH8BC,IAAMC,WCArBE,GCEeH,IAAMC,2LDAtC,OACGJ,EAAAC,EAAAC,cAAA,gCAH2BC,IAAMC,YEAnBG,mLAEjB,OACGP,EAAAC,EAAAC,cAAA,kCAHkCC,IAAMC,WCA1BI,mLAEjB,OACGR,EAAAC,EAAAC,cAAA,kDAH+BC,IAAMC,WCAvBK,mLAEjB,OACGT,EAAAC,EAAAC,cAAA,2BAH4BC,IAAMC,mBCCpBM,mLAEjB,OACEV,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKS,MAAM,iDACTX,EAAAC,EAAAC,cAAA,KAAGS,MAAM,eAAeC,KAAK,KAA7B,UACAZ,EAAAC,EAAAC,cAAA,UAAQS,MAAM,iBAAiBE,KAAK,SAASC,cAAY,WAAWC,cAAY,0BAA0BC,gBAAc,yBAAyBC,gBAAc,QAAQC,aAAW,qBAChLlB,EAAAC,EAAAC,cAAA,QAAMS,MAAM,yBAGdX,EAAAC,EAAAC,cAAA,OAAKS,MAAM,2BAA2BQ,GAAG,0BACvCnB,EAAAC,EAAAC,cAAA,MAAIS,MAAM,sBACRX,EAAAC,EAAAC,cAAA,MAAIS,MAAM,YACRX,EAAAC,EAAAC,cAAA,QAAMS,MAAM,YAAZ,IAAwBX,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAASC,GAAG,KAAZ,UAE1BrB,EAAAC,EAAAC,cAAA,MAAIS,MAAM,YACRX,EAAAC,EAAAC,cAAA,QAAMS,MAAM,YAAWX,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAASC,GAAG,gBAAZ,kBAEzBrB,EAAAC,EAAAC,cAAA,MAAIS,MAAM,qBACRX,EAAAC,EAAAC,cAAA,QAAMS,MAAM,YAAWX,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAASC,GAAG,aAAZ,eAEzBrB,EAAAC,EAAAC,cAAA,MAAIS,MAAM,YACRX,EAAAC,EAAAC,cAAA,KAAGS,MAAM,oBAAoBC,KAAK,KAAlC,2BAtBmBT,IAAMC,WCkCxBkB,mLAjBX,OACEtB,EAAAC,EAAAC,cAACqB,EAAA,EAAD,KACEvB,EAAAC,EAAAC,cAAA,OAAKS,MAAM,aACTX,EAAAC,EAAAC,cAACsB,EAAD,MACAxB,EAAAC,EAAAC,cAACuB,EAAA,EAAD,KACEzB,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWvB,IACjCN,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAOE,KAAK,eAAeC,UAAWtB,IACtCP,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAOE,KAAK,YAAYC,UAAWrB,IACnCR,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAOG,UAAWpB,cAXZL,aCLE0B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOpC,EAAAC,EAAAC,cAACmC,EAAD,MAASC,SAASC,eAAe,SDuH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.ca76f7c0.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default class Header extends React.Component {\r\n  render() {\r\n    return (\r\n      <header>TEST</header>\r\n    );\r\n  }\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class Footer extends React.Component {\r\n  render() {\r\n    return (\r\n      <header>TEST Bottom</header>\r\n    );\r\n  }\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class Home extends React.Component {\r\n  render() {\r\n    return (\r\n       <div>Hosdfsdfme</div>\r\n    );\r\n  }\r\n\r\n}\r\n","import React from \"react\";\r\nimport Header from \"./Header\"\r\nimport Footer from \"./Footer\"\r\n\r\nexport default class Layout extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <Footer />\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class BasicCourse extends React.Component {\r\n  render() {\r\n    return (\r\n       <div>Basic Course</div>\r\n    );\r\n  }\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class FunFacts extends React.Component {\r\n  render() {\r\n    return (\r\n       <div>FunFactsasdfasdfasdfasdfasdf</div>\r\n    );\r\n  }\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class Error extends React.Component {\r\n  render() {\r\n    return (\r\n       <div>Error</div>\r\n    );\r\n  }\r\n\r\n}\r\n","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\"\r\n\r\nexport default class Nav extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n      <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <a class=\"navbar-brand\" href=\"#\">Navbar</a>\r\n        <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span class=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n\r\n        <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul class=\"navbar-nav mr-auto\">\r\n            <li class=\"nav-item\">\r\n              <span class=\"nav-link\"> <NavLink to=\"/\">Home</NavLink></span>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n              <span class=\"nav-link\"><NavLink to=\"/basiccourse\">Basic Course</NavLink></span>\r\n            </li>\r\n            <li class=\"nav-item dropdown\">\r\n              <span class=\"nav-link\"><NavLink to=\"/funfacts\">Fun Facts</NavLink></span>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link disabled\" href=\"#\">Coming soon</a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\n\nimport React, { Component } from 'react';\nimport {BrowserRouter, Route, Switch } from \"react-router-dom\"\nimport './App.css';\nimport Layout from \"./components/Layout\"\nimport Home from \"./components/Home\"\nimport BasicCourse from \"./components/BasicCourse\"\nimport FunFacts from \"./components/FunFacts\"\nimport Error from \"./components/Error\"\nimport Nav from \"./components/Nav\"\n\n\n\nclass App extends Component {\n  render() {\n\n    return (\n      <BrowserRouter>\n        <div class=\"container\">\n          <Nav/>\n          <Switch>\n            <Route exact path=\"/\" component={Home}/>\n            <Route path=\"/basiccourse\" component={BasicCourse}/>\n            <Route path=\"/funfacts\" component={FunFacts}/>\n            <Route component={Error}/>\n          </Switch>\n        </div>\n      </BrowserRouter>\n\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}